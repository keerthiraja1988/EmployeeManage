
@(Html.Kendo().Grid<WebAppCore.Areas.EmployeeManage.Models.EmployeeViewModel>().Name("grdEmployeeSearch")
                                                            .Columns(columns =>
                                                            {

                                                                columns.Command(command =>
                                                                {

                                                                    command.Custom("Edit").Text("<i class='fas fa-user-edit'></i>")
                                                                    .Click("onEditEmployeeDetails").HtmlAttributes(
                                                                                    new
                                                                                    {
                                                                                        @style =
                                                                                    "margin-top : 1px; margin-bottom : 1px ;margin-right : 5px ;" +
                                                                                    "box-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);    transition: all 0.4s; "
                                                                                    });
                                                                    command.Custom("Custom Delete").Text("<i class='fas fa-user-times'></i>")
                                                                     .Click("openWindow")
                                                                      .HtmlAttributes(
                                                                                 new
                                                                                 {
                                                                                     @style =
                                                                                 "box-shadow: 0 1px 4px rgba(0, 0, 0, 0.4);    transition: all 0.4s; " +
                                                                                 "background-color: #b71010;"
                                                                                 });

                                                                })
                                                                        .Width(110);
                                                                columns.Bound(c => c.EmployeeId).Width(125);
                                                                columns.Bound(c => c.FirstName).Width(120);
                                                                columns.Bound(c => c.LastName).Width(110);
                                                                columns.Bound(c => c.FullName).Width(110);
                                                                columns.Bound(c => c.DateOfBirth).Format("{0: yyyy-MM-dd}").Width(130);
                                                                columns.Bound(c => c.DateOfJoining).Format("{0: yyyy-MM-dd}").Width(145);

                                                                columns.Bound(c => c.Email);
                                                                columns.Bound(c => c.TIN);
                                                                columns.Bound(c => c.PASSPORT);

                                                            })
                                                             .Mobile()
                                    .Editable(editable => editable.Mode(GridEditMode.InLine))
                                     .Scrollable()

                                                //  .HtmlAttributes(new { style = "height: 650px; width: 1600px;" })
                                                .Pageable()
                                                .Editable(e => e.DisplayDeleteConfirmation(false))

                                                             .Filterable()
                                                        .Sortable()

                                                        .ColumnMenu()
                                                       .Resizable(resizable => resizable.Columns(true))
                                                       .Events(events => events
                                                            .DataBound("onDataBound")
                                                            .DataBinding("onDataBinding")

                                                        )

                                                            .DataSource(dataSource => dataSource
                                                                .Ajax()

                                                                .PageSize(20)
                                                                .Model(model => model.Id(p => p.EmployeeId))
                                                                .Events(events =>
                                                                        events.Error("onError")
                                                                        .RequestEnd("onRequestEnd")
                                                                        .RequestStart("onRequestStart")
                                                                        )
                                                                .Read(read => read.Action(
                                                                    routeValues: "GetEmployeeDetails",
                                                                    controllerName: "EmployeeManage", actionName: "Products_Read"
                                                                    ).Data("JsEmployee.GetEmployeeSearchDataForRead")
                                                                    )
                                                              .Destroy(update => update.Action(routeValues: "GetEmployeeDetails",
                                                                    controllerName: "EmployeeManage", actionName: "DeleteEmployee"))



                                                                    )
)


<input type="hidden" id="hdnSeachAllEmployee" name="hdnSeachAllEmployee" value="1">


<div class="modal fade" id="modalDeleteEmployeeConfimation" tabindex="-1" role="dialog"
     data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog  modal-lg" id="modalDeleteEmployeeConfimationDialog">
        <div class="modal-content">
            <script>
                $(function () {

                    $("#modalDeleteEmployeeConfimationDialog").draggable(
                        {
                            handle: "#modalDeleteEmployeeConfimationHeader"
                        }
                    );
                    $(".modal-title").disableSelection();

                });
            </script>
            <div class="modal-header bg-info pt-0 pb-0 "
                 style="box-shadow: 0 0 5px #888; cursor: grab; color:white" id="modalDeleteEmployeeConfimationHeader">
                <h5 class="modal-title" id="modalDeleteEmployeeConfimationTitle">Message</h5>
            </div>

            <!-- Modal body -->
            <div class="modal-body  pt-3 pb-3" id="">
                <span style="    font-size: 15px;" class="pt-3 pb-3" id="modalDeleteEmployeeConfimationMsg">
                    Do you want to remove this Employee from application
                </span>
            </div>


            <!-- Modal footer -->
            <div class="modal-footer" style="padding-top: 5px; padding-bottom: 5px;">
                <button type="button" id="DeleteEmployeeConfimationYes" class="btn btn-success ml-2"
                        data-dismiss="modal">
                    <i class="fas fa-check"></i>
                    Yes
                </button>
                <button type="button" id="DeleteEmployeeConfimationYesNo" class="btn btn-dark ml-2"
                        data-dismiss="modal">
                    <i class="fas fa-times"></i>
                    No
                </button>
            </div>
        </div>
    </div>
</div>

<script>

    function onComboBoxCountryCodeChange(e) {

        if (this.select() < 0) {
            this.value("");
            $('#CountryCode').data('kendoComboBox').select(0);
        }
    }

    function onComboBoxCurrentCountryCodeChange(e) {
        if (this.select() < 0) {
            this.value("");
            $('#CurrentAddress_CountryId').data('kendoComboBox').select(0);
            // $('#CountryCode').data('kendoComboBox').select(0);
        }
    }

    function onComboBoxPermenantCountryCodeChange(e) {
        if (this.select() < 0) {
            this.value("");
            $('#PermenantAddress_CountryId').data('kendoComboBox').select(0);
            // $('#CountryCode').data('kendoComboBox').select(0);
        }
    }

    var onError = function (e) {
        JsMain.HideLoaddingIndicator();
    var destroyedData = e.sender._destroyed ;
    if (destroyedData.length > 0) {
        alert("Error Occured on Delete the Employee Number : " + destroyedData[0].EmployeeId);
    }
    var grid = $("#grdEmployeeSearch").data("kendoGrid");
    // cancel changes
    grid.cancelChanges();

}

function onRequestStart(e) {

    if (e.type == "destroy") {

    }
    JsMain.ShowLoaddingIndicator();
    //RequestEnd handler code
}

function onRequestEnd(e) {
    JsMain.HideLoaddingIndicator();
    if (e.type == "destroy") {

        var dataArray = e.response.split("|");
        //Request Failed
        if (dataArray[1] == '1') {
            JsMain.ShowMessageShowReloadPopUp(dataArray[2], dataArray[3]);
        }
        //Request Passed
        if (dataArray[1] == '0') {

            JsMain.ShowMessageShowPopUp(dataArray[2], dataArray[3]);
        }

    }

    //RequestEnd handler code
}

    function onEditEmployeeDetails(e) {
        JsMain.ShowLoaddingIndicator();
    var urlEditEmployeeDetails =  '@Url.Action("GetEmployeeDetailsForEdit", "EmployeeManage",
                                                new { area = "EmployeeManage" })';

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        JsEmployee.EditEmployeeDetails(urlEditEmployeeDetails, dataItem);
        e.preventDefault();
    }

    function onError(e) {
        JsMain.Response404Error();
    }

    function onDataBound(arg) {
        JsMain.HideLoaddingIndicator();
    }

    function onDataBinding(arg) {
        JsMain.HideLoaddingIndicator();
    }

    function GetEmployeeSearchDataForRead() {

    };



    function openWindow(e) {
        e.preventDefault();

        var grid = this;
        var row = $(e.currentTarget).closest("tr");
        //wnd.center().open();
        $('#modalDeleteEmployeeConfimation').modal('show');
        $("#DeleteEmployeeConfimationYes").click(function () {
            grid.removeRow(row);
            //wnd.close();
            $('#modalMessageShowPopUp1').modal('hide');
        });

        $("#DeleteEmployeeConfimationYesNo").click(function () {
            $('#modalMessageShowPopUp1').modal('hide');
        });
    }
</script>