<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
     internalLogLevel="info"
      internalLogFile="c:\temp\internal-nlog.txt">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <targets  async="true">
    <target name="AsynDBLogging" xsi:type="AsyncWrapper" overflowAction="Discard" queueLimit="10000" batchSize="100" timeToSleepBetweenBatches="40">

      <target name="database" xsi:type="Database" dbProvider="System.Data.SqlClient"  >
        <connectionString>Data Source=.;Initial Catalog=EmployeeManage;Integrated Security=True;</connectionString>
        <commandText>
          INSERT INTO [dbo].[LogsAspNetCoreError]
          ([Application]  ,[Logged]   ,[Level]   ,[UserId] ,[UserName],[IpAddress]  ,[Url] ,[Host]
          ,[QueryString]  ,[Browser]   ,[Cookie],[Referrer] ,[Message]   ,[Machinename]
          ,[Logger]
          ,[Callsite]          ,[Exception]) values (
          @application,          @logged,          @level,          @userId,          @userName,          @ipaddress,
          @url,          @host,          @queryString,          @browser,          @cookie,          @referrer,
          @message,          @machinename,          @logger,          @callSite,          @exception          );
        </commandText>
        <parameter name="@application"    layout="${iis-site-name}" />
        <parameter name="@logged"     layout="${date}" />
        <parameter name="@level"    layout="${level}" />
        <parameter name="@userId" layout="userId" />
        <!--<parameter name="@userName" layout="userName" />-->
        <parameter name="@userName" layout="${aspnet-user-identity}"/>
        <parameter name="@ipaddress" layout="${aspnet-Request-Ip}" />
        <parameter name="@url" layout="${aspnet-request-url:IncludePort=true:IncludeQueryString=true}" />
        <parameter name="@host" layout=" ${aspnet-Request-Host}" />
        <parameter name="@queryString" layout=" ${aspnet-Request-QueryString}" />
        <parameter name="@browser" layout=" ${aspnet-Request-UserAgent}" />
        <parameter name="@cookie" layout=" ${aspnet-Request-Cookie}" />
        <parameter name="@referrer" layout=" ${aspnet-Request-Referrer}" />
        <!--<parameter name="@message" layout="Controller: ${aspnet-mvc-controller} , 
        action: ${aspnet-mvc-action} | Method : ${aspnet-Request-Method} ${message}  "/>-->

        <parameter name="@message" layout="${when:when=starts-with('${message}','JsErrorId!%$') :
                            inner= ${message}
                            :else= Controller - ${aspnet-mvc-controller} action- ${aspnet-mvc-action} Method - ${aspnet-Request-Method} Message - ${message}"/>
        <parameter name="@machinename" layout="${machinename}"/>
        <parameter name="@logger" layout="${logger}" />
        <parameter name="@callSite" layout="${callsite:filename=true}" />
        <parameter name="@exception" layout="${exception:tostring}" />
      </target>
    </target>
  </targets>
  <rules>
    <logger name="*" minlevel="Error" writeTo="AsynDBLogging">
      <filters>
        <!--<when condition="length('${message}') > 50" action="Ignore" />-->
        <!--<when condition="not starts-with('${message}','PleaseLogThis')" action="Ignore" />-->
      </filters>
    </logger>
  </rules>
</nlog>